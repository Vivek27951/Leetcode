class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL)
            return 0;
        queue<pair<TreeNode*,long long>>q;
        q.push({root,0});
        long long maxi = INT_MIN;
        while(!q.empty()){
            long long n = q.size();
            long long first,last;
            long long mini = q.front().second;
            for(int i=0;i<n;i++){
                TreeNode* temp = q.front().first;
                long long num = q.front().second-mini;
                q.pop();
                if(i==0) first = num;
                if(i==n-1) last = num;
                if(temp->left)
                    q.push({temp->left,(2*num)+1});
                if(temp->right)
                    q.push({temp->right,(2*num)+2});
                
            }
            maxi = max(maxi,last-first+1);
        }
        cout<<endl;
        return maxi;
       
    }
};
